name: Step 1, Resolve a merge conflict

# This step triggers after the user resolves the merge conflict
# This step sets STEP to 2
# This step closes <details id=1> and opens <details id=2>

# This will run every time we push to `my-resume` (this will be a merge commit 
# since the user is resolving a merge conflict)
# Reference https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  push:
    branches:
      - my-resume

# Reference https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository
  # Need `contents: write` to update the step metadata
  contents: write

jobs:
  # Get the current step from .github/script/STEP so we can
  # limit running the main job when the learner is on the same step.
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/script/STEP)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  on_resolve_merge_conflict:
    name: On resolve merge conflict
    needs: get_current_step

    # We will only run this action when:
    # 1. This repository isn't the template repository
    # 2. The STEP is currently 1
    # Reference https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 1 }}

    # We'll run Ubuntu for performance instead of Mac or Windows
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Let's get all the branches
          ref: my-resume

      - name: Create and push a new file on main
        run: |
          echo "Make sure we are on step 1"
          if [ "$(cat .github/script/STEP)" != 1 ]
          then
            echo "Current step is not 1"
            exit 0
          fi

          echo "Checkout main"
          git checkout main 

          echo "Create new file"
          printf "# References\n\n* octocat 1 ðŸ˜ˆ" >> references.md

          echo "Commit file"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add references.md
          git commit --message="Add references.md"

          echo "Push"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Update README to close <details id=1> and open <details id=2>
      # and set STEP to '2'
      - name: Update to step 2
        uses: skills/action-update-step@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 1
          to_step: 2
          branch_name: my-resume
